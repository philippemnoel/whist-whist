// Code generated by pggen. DO NOT EDIT.

package queries

import (
	"context"
	"fmt"
	"github.com/jackc/pgconn"
	"github.com/jackc/pgx/v4"
)

const deleteInstanceSQL = `DELETE FROM whist.instances WHERE id = $1;`

// DeleteInstance implements Querier.DeleteInstance.
func (q *DBQuerier) DeleteInstance(ctx context.Context, instanceID string) (pgconn.CommandTag, error) {
	ctx = context.WithValue(ctx, "pggen_query_name", "DeleteInstance")
	cmdTag, err := q.conn.Exec(ctx, deleteInstanceSQL, instanceID)
	if err != nil {
		return cmdTag, fmt.Errorf("exec query DeleteInstance: %w", err)
	}
	return cmdTag, err
}

// DeleteInstanceBatch implements Querier.DeleteInstanceBatch.
func (q *DBQuerier) DeleteInstanceBatch(batch genericBatch, instanceID string) {
	batch.Queue(deleteInstanceSQL, instanceID)
}

// DeleteInstanceScan implements Querier.DeleteInstanceScan.
func (q *DBQuerier) DeleteInstanceScan(results pgx.BatchResults) (pgconn.CommandTag, error) {
	cmdTag, err := results.Exec()
	if err != nil {
		return cmdTag, fmt.Errorf("exec DeleteInstanceBatch: %w", err)
	}
	return cmdTag, err
}
