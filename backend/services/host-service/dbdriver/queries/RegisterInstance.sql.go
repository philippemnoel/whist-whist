// Code generated by pggen. DO NOT EDIT.

package queries

import (
	"context"
	"fmt"
	"github.com/jackc/pgconn"
	"github.com/jackc/pgtype"
	"github.com/jackc/pgx/v4"
)

const registerInstanceSQL = `UPDATE whist.instances
  SET (provider, region, image_id, client_sha, ip_addr, instance_type, remaining_capacity, status, created_at, updated_at)
  = ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
  WHERE id = $11;`

type RegisterInstanceParams struct {
	Provider          CloudProvider
	Region            pgtype.Varchar
	ImageID           pgtype.Varchar
	ClientSha         pgtype.Varchar
	IpAddr            pgtype.Inet
	InstanceType      pgtype.Varchar
	RemainingCapacity int32
	Status            InstanceState
	CreatedAt         pgtype.Timestamptz
	UpdatedAt         pgtype.Timestamptz
	InstanceID        string
}

// RegisterInstance implements Querier.RegisterInstance.
func (q *DBQuerier) RegisterInstance(ctx context.Context, params RegisterInstanceParams) (pgconn.CommandTag, error) {
	ctx = context.WithValue(ctx, "pggen_query_name", "RegisterInstance")
	cmdTag, err := q.conn.Exec(ctx, registerInstanceSQL, params.Provider, params.Region, params.ImageID, params.ClientSha, params.IpAddr, params.InstanceType, params.RemainingCapacity, params.Status, params.CreatedAt, params.UpdatedAt, params.InstanceID)
	if err != nil {
		return cmdTag, fmt.Errorf("exec query RegisterInstance: %w", err)
	}
	return cmdTag, err
}

// RegisterInstanceBatch implements Querier.RegisterInstanceBatch.
func (q *DBQuerier) RegisterInstanceBatch(batch genericBatch, params RegisterInstanceParams) {
	batch.Queue(registerInstanceSQL, params.Provider, params.Region, params.ImageID, params.ClientSha, params.IpAddr, params.InstanceType, params.RemainingCapacity, params.Status, params.CreatedAt, params.UpdatedAt, params.InstanceID)
}

// RegisterInstanceScan implements Querier.RegisterInstanceScan.
func (q *DBQuerier) RegisterInstanceScan(results pgx.BatchResults) (pgconn.CommandTag, error) {
	cmdTag, err := results.Exec()
	if err != nil {
		return cmdTag, fmt.Errorf("exec RegisterInstanceBatch: %w", err)
	}
	return cmdTag, err
}
