// Code generated by pggen. DO NOT EDIT.

package queries

import (
	"context"
	"fmt"
	"github.com/jackc/pgconn"
	"github.com/jackc/pgx/v4"
)

const writeInstanceStatusSQL = `UPDATE whist.instances
  SET status = $1
  WHERE id = $2;`

// WriteInstanceStatus implements Querier.WriteInstanceStatus.
func (q *DBQuerier) WriteInstanceStatus(ctx context.Context, status InstanceState, instanceID string) (pgconn.CommandTag, error) {
	ctx = context.WithValue(ctx, "pggen_query_name", "WriteInstanceStatus")
	cmdTag, err := q.conn.Exec(ctx, writeInstanceStatusSQL, status, instanceID)
	if err != nil {
		return cmdTag, fmt.Errorf("exec query WriteInstanceStatus: %w", err)
	}
	return cmdTag, err
}

// WriteInstanceStatusBatch implements Querier.WriteInstanceStatusBatch.
func (q *DBQuerier) WriteInstanceStatusBatch(batch genericBatch, status InstanceState, instanceID string) {
	batch.Queue(writeInstanceStatusSQL, status, instanceID)
}

// WriteInstanceStatusScan implements Querier.WriteInstanceStatusScan.
func (q *DBQuerier) WriteInstanceStatusScan(results pgx.BatchResults) (pgconn.CommandTag, error) {
	cmdTag, err := results.Exec()
	if err != nil {
		return cmdTag, fmt.Errorf("exec WriteInstanceStatusBatch: %w", err)
	}
	return cmdTag, err
}
