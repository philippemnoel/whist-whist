version: "3.6"

services:
  postgres:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ${PWD}/../database/schema.sql:/docker-entrypoint-initdb.d/000-schema.sql
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  postgres-config:
    image: postgres
    volumes:
      - db_data_config:/var/lib/postgresql/config-data
      - ${PWD}/config_schema.sql:/docker-entrypoint-initdb.d/000-schema.sql
      - ${PWD}/config_data.sql:/docker-entrypoint-initdb.d/001-data.sql
  environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  graphql-engine:
    image: hasura/graphql-engine
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    volumes:
      - ${PWD}/wait-for-it.sh:/wait-for-it.sh
    environment:
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      HASURA_GRAPHQL_DATABASE_URL: postgresql://postgres@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
    command: ["/wait-for-it.sh", "postgres:5432", "--", "graphql-engine", "serve"]

  graphql-config-engine:
    image: hasura/graphql-engine
    ports:
      - "8082:8080"
    depends_on:
    - "postgres-config"
    volumes:
      - ${PWD}/wait-for-it.sh:/wait-for-it.sh
    environment:
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      HASURA_GRAPHQL_DATABASE_URL: postgresql://postgres@postgres-config:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
    command: ["/wait-for-it.sh", "postgres-config:5432", "--", "graphql-engine", "serve"]

  setup:
    build:
      context: .
      dockerfile: Dockerfile.setup
    depends_on:
      - graphql-engine
      - graphql-config-engine
    profiles:
      - run

volumes:
  db_data:
  db_data_config:
