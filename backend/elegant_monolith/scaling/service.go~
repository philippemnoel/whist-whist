package scaling

import (
	"context"
	"github.com/whisthq/whist/backend/elegant_monolith/internal"
)

type ScalingService interface {
	internal.Service
	ScaleUpIfNecessary(ctx context.Context, instancesToScale int, imageID string) (instanceIDs []string, err error)
	ScaleDownIfNecessary(ctx context.Context) (instanceIDs []string, err error)
}

type scalingService struct {
	// db WhistDBClient
}

func (scalingService) ScaleUpIfNecessary(ctx context.Context, instancesToScale int, imageID string) (instanceIDs []string, err error) {
	return []string{}, nil
}

func (scalingService) ScaleDownIfNecessary(ctx context.Context) (instanceIDs []string, err error) {
	return []string{}, nil
}
