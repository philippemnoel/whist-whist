# This workflow will check if the code is linted with Gofmt
name: Go Linter

on:
  pull_request:
    branches: [ master, dev ]
    paths-ignore:
    - '**/README.md'

jobs:
  lint:
    name: Go Linter
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3

      - name: Install goimports
        run: |
          go get -u golang.org/x/tools/cmd/goimports

      - name: Check if code is linted with goimports
        run: |
          PATH=$PATH:~/go/bin
          result=$(goimports -l *.go fractallogger/*.go fractalwebserver/*.go) # goimports -l returns nothing if all files are formatted, else returns files that need formatting
          if [ "$result" -ne "0" ]; then        
            (echo "To pass this check please lint the code with goimports" && false)
          else
            (echo "Code is linted with goimports" && true)
          fi
