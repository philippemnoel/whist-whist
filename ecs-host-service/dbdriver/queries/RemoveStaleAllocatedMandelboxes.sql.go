// Code generated by pggen. DO NOT EDIT.

package queries

import (
	"context"
	"fmt"
	"github.com/jackc/pgconn"
	"github.com/jackc/pgx/v4"
)

const removeStaleAllocatedMandelboxesSQL = `DELETE FROM hardware.mandelbox_info
  WHERE instance_name = $1
    AND status = $2
    AND creation_time_utc_unix_ms < $3;`

type RemoveStaleAllocatedMandelboxesParams struct {
	InstanceName          string
	Status                string
	CreationTimeThreshold int
}

// RemoveStaleAllocatedMandelboxes implements Querier.RemoveStaleAllocatedMandelboxes.
func (q *DBQuerier) RemoveStaleAllocatedMandelboxes(ctx context.Context, params RemoveStaleAllocatedMandelboxesParams) (pgconn.CommandTag, error) {
	ctx = context.WithValue(ctx, "pggen_query_name", "RemoveStaleAllocatedMandelboxes")
	cmdTag, err := q.conn.Exec(ctx, removeStaleAllocatedMandelboxesSQL, params.InstanceName, params.Status, params.CreationTimeThreshold)
	if err != nil {
		return cmdTag, fmt.Errorf("exec query RemoveStaleAllocatedMandelboxes: %w", err)
	}
	return cmdTag, err
}

// RemoveStaleAllocatedMandelboxesBatch implements Querier.RemoveStaleAllocatedMandelboxesBatch.
func (q *DBQuerier) RemoveStaleAllocatedMandelboxesBatch(batch *pgx.Batch, params RemoveStaleAllocatedMandelboxesParams) {
	batch.Queue(removeStaleAllocatedMandelboxesSQL, params.InstanceName, params.Status, params.CreationTimeThreshold)
}

// RemoveStaleAllocatedMandelboxesScan implements Querier.RemoveStaleAllocatedMandelboxesScan.
func (q *DBQuerier) RemoveStaleAllocatedMandelboxesScan(results pgx.BatchResults) (pgconn.CommandTag, error) {
	cmdTag, err := results.Exec()
	if err != nil {
		return cmdTag, fmt.Errorf("exec RemoveStaleAllocatedMandelboxesBatch: %w", err)
	}
	return cmdTag, err
}
