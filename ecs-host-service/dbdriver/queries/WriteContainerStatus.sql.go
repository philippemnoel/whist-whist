// Code generated by pggen. DO NOT EDIT.

package queries

import (
	"context"
	"fmt"
	"github.com/jackc/pgconn"
	"github.com/jackc/pgtype"
	"github.com/jackc/pgx/v4"
)

const writeContainerStatusSQL = `UPDATE hardware.container_info
  SET status = $1
  WHERE container_id = $2;`

// WriteContainerStatus implements Querier.WriteContainerStatus.
func (q *DBQuerier) WriteContainerStatus(ctx context.Context, status pgtype.Varchar, containerID string) (pgconn.CommandTag, error) {
	ctx = context.WithValue(ctx, "pggen_query_name", "WriteContainerStatus")
	cmdTag, err := q.conn.Exec(ctx, writeContainerStatusSQL, status, containerID)
	if err != nil {
		return cmdTag, fmt.Errorf("exec query WriteContainerStatus: %w", err)
	}
	return cmdTag, err
}

// WriteContainerStatusBatch implements Querier.WriteContainerStatusBatch.
func (q *DBQuerier) WriteContainerStatusBatch(batch *pgx.Batch, status pgtype.Varchar, containerID string) {
	batch.Queue(writeContainerStatusSQL, status, containerID)
}

// WriteContainerStatusScan implements Querier.WriteContainerStatusScan.
func (q *DBQuerier) WriteContainerStatusScan(results pgx.BatchResults) (pgconn.CommandTag, error) {
	cmdTag, err := results.Exec()
	if err != nil {
		return cmdTag, fmt.Errorf("exec WriteContainerStatusBatch: %w", err)
	}
	return cmdTag, err
}
