// Code generated by pggen. DO NOT EDIT.

package queries

import (
	"context"
	"fmt"
	"github.com/jackc/pgconn"
	"github.com/jackc/pgtype"
	"github.com/jackc/pgx/v4"
)

const markDrainingSQL = `UPDATE hardware.instance_info
  SET status = $1
  WHERE instance_name = $2;`

// MarkDraining implements Querier.MarkDraining.
func (q *DBQuerier) MarkDraining(ctx context.Context, status pgtype.Varchar, instanceName string) (pgconn.CommandTag, error) {
	ctx = context.WithValue(ctx, "pggen_query_name", "MarkDraining")
	cmdTag, err := q.conn.Exec(ctx, markDrainingSQL, status, instanceName)
	if err != nil {
		return cmdTag, fmt.Errorf("exec query MarkDraining: %w", err)
	}
	return cmdTag, err
}

// MarkDrainingBatch implements Querier.MarkDrainingBatch.
func (q *DBQuerier) MarkDrainingBatch(batch *pgx.Batch, status pgtype.Varchar, instanceName string) {
	batch.Queue(markDrainingSQL, status, instanceName)
}

// MarkDrainingScan implements Querier.MarkDrainingScan.
func (q *DBQuerier) MarkDrainingScan(results pgx.BatchResults) (pgconn.CommandTag, error) {
	cmdTag, err := results.Exec()
	if err != nil {
		return cmdTag, fmt.Errorf("exec MarkDrainingBatch: %w", err)
	}
	return cmdTag, err
}
