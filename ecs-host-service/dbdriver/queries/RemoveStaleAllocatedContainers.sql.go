// Code generated by pggen. DO NOT EDIT.

package queries

import (
	"context"
	"fmt"
	"github.com/jackc/pgconn"
	"github.com/jackc/pgx/v4"
)

const removeStaleAllocatedContainersSQL = `DELETE FROM hardware.container_info
  WHERE instance_name = $1
    AND status = $2
    AND creation_time_utc_unix_ms < $3;`

type RemoveStaleAllocatedContainersParams struct {
	InstanceName          string
	Status                string
	CreationTimeThreshold int
}

// RemoveStaleAllocatedContainers implements Querier.RemoveStaleAllocatedContainers.
func (q *DBQuerier) RemoveStaleAllocatedContainers(ctx context.Context, params RemoveStaleAllocatedContainersParams) (pgconn.CommandTag, error) {
	ctx = context.WithValue(ctx, "pggen_query_name", "RemoveStaleAllocatedContainers")
	cmdTag, err := q.conn.Exec(ctx, removeStaleAllocatedContainersSQL, params.InstanceName, params.Status, params.CreationTimeThreshold)
	if err != nil {
		return cmdTag, fmt.Errorf("exec query RemoveStaleAllocatedContainers: %w", err)
	}
	return cmdTag, err
}

// RemoveStaleAllocatedContainersBatch implements Querier.RemoveStaleAllocatedContainersBatch.
func (q *DBQuerier) RemoveStaleAllocatedContainersBatch(batch *pgx.Batch, params RemoveStaleAllocatedContainersParams) {
	batch.Queue(removeStaleAllocatedContainersSQL, params.InstanceName, params.Status, params.CreationTimeThreshold)
}

// RemoveStaleAllocatedContainersScan implements Querier.RemoveStaleAllocatedContainersScan.
func (q *DBQuerier) RemoveStaleAllocatedContainersScan(results pgx.BatchResults) (pgconn.CommandTag, error) {
	cmdTag, err := results.Exec()
	if err != nil {
		return cmdTag, fmt.Errorf("exec RemoveStaleAllocatedContainersBatch: %w", err)
	}
	return cmdTag, err
}
