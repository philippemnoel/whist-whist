#################### STAGE 1: figma-1 ####################
# - Download and organize Figma and Electron
# - Cache Electron version in electron.v
# EXPOSES electron.v to bindings-builder
# EXPOSES all of figma-1 to figma-2 as the final image
##########################################################
FROM fractal/browsers/chrome:current-build as figma-1

# Force failure on non-zero exit code for commands with a pipe in them
SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

# Install Figma build dependencies explicitly
RUN apt-get update && apt-get install --allow-downgrades --no-install-recommends -y \
    unzip \
    jq \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install the Figma macOS Electron application and write down its Electron version
RUN wget -qO figma.zip https://www.figma.com/download/desktop/mac \
    && mkdir -p tmp/build/build/Release \
    && unzip figma.zip -d tmp/figma \
    && cp -r tmp/figma/*.app/Contents/Resources/* tmp/build \
    && rm figma.zip \
    && strings tmp/figma/*.app/Contents/Frameworks/'Electron Framework'.framework/Versions/Current/'Electron Framework' \
    | grep Electron/ \
    | head -1 \
    | awk -F/ '{print $NF}' \
    > electron.v \
    && rm -rf tmp/figma

# Install appropriate Electron version
RUN ELECTRON_V="v$(cat electron.v)" \
    && wget -qO electron.zip "https://github.com/electron/electron/releases/download/$ELECTRON_V/electron-$ELECTRON_V-linux-x64.zip" \
    && unzip electron.zip -d tmp/build \
    && rm -rf electron.zip

#################### STAGE 2: bindings-builder ####################
# - Copy Electron version from figma-1
# - Copy figma-font-bindings subfolder to be compiled
# EXPOSES bindings.node to figma-2 to provide getFonts() to Figma
###################################################################
FROM ubuntu:20.04 as bindings-builder

# Force failure on non-zero exit code for commands with a pipe in them
SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

# Install Figma Font Bindings build dependencies explicitly
RUN apt-get update && apt-get install --allow-downgrades --no-install-recommends -y \
    npm \
    rustc \
    cargo \
    gcc \
    g++ \
    make \
    cmake \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy Electron version
COPY --from=figma-1 electron.v .

# Copy figma-font-bindings subfolder
COPY figma-font-bindings figma-font-bindings

# Build bindings.node
RUN ELECTRON_V="$(cat electron.v)" \
    && cd figma-font-bindings \
    && npm install \
    && npx electron-build-env --electron "$ELECTRON_V" -- neon build --release \
    && cd .. \
    && mv figma-font-bindings/native/index.node bindings.node \
    && rm -rf figma-font-bindings electron.v

#################### STAGE 3: figma-2 ####################
# - Install bindings.node into Figma
# - Install Figma to /opt/figma and script to /usr/bin
# - Configure figma:// protocol handling
# - Whitelist figma:// in google-chrome
# - Cache electron version in electron.v
# EXPOSES all of figma-2 as the final image
##########################################################
FROM figma-1 as figma-2

# Force failure on non-zero exit code for commands with a pipe in them
SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

# Copy bindings.node from bindings-builder stage into Figma directory
COPY --from=bindings-builder bindings.node tmp/build/build/Release/bindings.node

# Install Figma into /opt/figma
RUN mv tmp/build /opt/figma \
    && rm electron.v

# Install Fractal wrapper script to run Figma into /usr/bin
COPY run-figma.sh /usr/bin/figma
RUN chmod +x /usr/bin/figma

# Install figma-app.desktop to enable figma:// handling
COPY figma-app.desktop /opt/figma/figma-app.desktop
RUN su - fractal -c 'xdg-desktop-menu install /opt/figma/figma-app.desktop'

# Whitelist figma:// in Google Chrome, for authentication redirection
RUN mkdir -p /etc/opt/chrome/policies/managed \
    && echo {} \
    | jq '.URLWhitelist=["figma://*"]' \
    > /etc/opt/chrome/policies/managed/whitelist.json

# Create default config paths
RUN su - fractal -c "mkdir -p /home/fractal/.config/Figma"

# Setup Fractal application symlink
RUN ln -sf /usr/bin/figma /usr/bin/fractal-application
