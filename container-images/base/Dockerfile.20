FROM ubuntu:20.04

# -o option for pipefail before RUN commands with pipe in them, like unminimize
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

ENV container docker
ENV LC_ALL C
ENV DEBIAN_FRONTEND noninteractive

RUN sed -i 's/# deb/deb/g' /etc/apt/sources.list

RUN apt-get update \
    && apt-get install --no-install-recommends -y systemd systemd-sysv \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

WORKDIR /lib/systemd/system/sysinit.target.wants/
RUN ls | grep -v systemd-tmpfiles-setup | xargs rm -f "$1"
WORKDIR /

RUN rm -f /lib/systemd/system/multi-user.target.wants/* \
    /etc/systemd/system/*.wants/* \
    /lib/systemd/system/local-fs.target.wants/* \
    /lib/systemd/system/sockets.target.wants/*udev* \
    /lib/systemd/system/sockets.target.wants/*initctl* \
    /lib/systemd/system/basic.target.wants/* \
    /lib/systemd/system/anaconda.target.wants/* \
    /lib/systemd/system/plymouth* \
    /lib/systemd/system/systemd-update-utmp*

RUN apt-get update && apt-get clean && apt-get install --no-install-recommends -y \
    x11vnc \
    xvfb \
    fluxbox \
    wmctrl \
    wget \
    gnupg2 \
    libgbm1 \
    libxcb-dri3-0 \
    wget \
    python \
    python3 \
    gnupg2 \
    sudo \
    vim \
    apt-utils \
    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list \
    && apt-get update && apt-get install --no-install-recommends -y google-chrome-stable \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Avoids interactive installation for tzdata
# Uses UTC
ENV LOCAL="yes"
RUN apt-get install --no-install-recommends -y tzdata keyboard-configuration ufw \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Workaround for sudo bug in containers https://github.com/sudo-project/sudo/issues/42
RUN echo "Set disable_coredump false" >> /etc/sudo.conf

# RUN wget -q -O utils.sh https://fractal-cloud-setup-s3bucket.s3.amazonaws.com/utils.sh >>/dev/null 2>&1
# Using local setup-scripts repository for development
COPY utils.sh /

RUN useradd --create-home fractal \
    && usermod -aG sudo fractal \ 
    && echo 'fractal:password1234567.' | chpasswd

# Install all required components for Fractal to perform well
# Split into multiple steps for caching
RUN /bin/bash -c "source utils.sh \ 
    && Update-Linux \
    && Set-Time \
    && Install-VirtualDisplay-NoGnome"
RUN /bin/bash -c "source utils.sh \ 
    && Install-7Zip \
    && Install-Curl \
    && Install-GoogleChrome"
RUN /bin/bash -c "source utils.sh \ 
    && Install-NvidiaTeslaPublicDrivers \
    && Disable-TCC \
    && Set-OptimalGPUSettings"
RUN /bin/bash -c "source utils.sh \ 
    && Install-CustomX11Configuration"
RUN /bin/bash -c "source utils.sh \ 
    && Set-FractalDirectory \
    && Install-FractalServer master"
RUN /bin/bash -c "source utils.sh \ 
    && Install-FractalExitScript \
    && Install-FractalAutoUpdate master \
    && Install-FractalLinuxInputDriver \
    && Install-FractalWallpaper "
RUN /bin/bash -c "source utils.sh \ 
    && Install-Unison \
    && Enable-SSHKey \
    && Disable-Shutdown \
    && Add-AutoLogin \ 
    && Disable-AutomaticLockScreen "

#From protocol/server/linux-server-setup.sh
RUN sudo apt-get install --no-install-recommends -y ffmpeg libavcodec-dev libavdevice-dev libx11-dev libxtst-dev libxdamage-dev libasound2-dev xclip x11-xserver-utils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY bootstrap.sh /home/fractal
COPY entry.sh /home/fractal
COPY fractal-input.rules home/fractal

RUN chmod +x /home/fractal/bootstrap.sh \
    && chown -v -R fractal:fractal /home/fractal
RUN chown root:root /run/user
RUN chmod +x /home/fractal/entry.sh


#### FROM PHIL 1/2 on this file: I think this new service for Nvidia needs to be added here, but not certain
#### It apparently needs to run before X so it might need to be even before (?)
COPY fractal-update-nvidia-busid.service /etc/systemd/system
####

COPY fractal-entrypoint.service /etc/systemd/system
COPY fractal-display.service /etc/systemd/system
# RUN chmod u+x /etc/systemd/system/bootstrap-service.service

VOLUME [ "/sys/fs/cgroup" ]

RUN systemctl set-default multi-user.target
ENV init /lib/systemd/systemd


#### FROM PHIL 2/2 on this file: running the new service from above!
RUN systemctl enable fractal-update-nvidia-busid
####

RUN systemctl enable fractal-entrypoint
RUN systemctl enable fractal-display

# USER fractal

CMD ["/lib/systemd/systemd"]
