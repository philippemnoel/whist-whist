#!/usr/bin/env bash

# This script starts the AwesomeWM window manager inside the container, retrieves
# the container ID and DPI, and starts the container's application (i.e. Google Chrome)

# Start the AwesomeWM window manager
# Things running outside runuser are run as root
runuser --login fractal -c \
    'DISPLAY=:10 \
	LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/lib/i386-linux-gnu:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 \
	LOCAL=yes \
	LC_ALL=C \
	PATH=/usr/local/cuda-11.0/bin:/usr/local/nvidia/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
	DEBIAN_FRONTEND=noninteractive \
    awesome' &

# Retrieve container parameters
CONTAINER_ID=$(basename $(cat /proc/1/cpuset))
DPI_FILENAME=/fractal/containerResourceMappings/$CONTAINER_ID/DPI

# Send DPI to X Server, if DPI is set for the container
if [ -f "$DPI_FILENAME" ]; then
    export FRACTAL_DPI=$(cat $DPI_FILENAME)
    echo "Xft.dpi: $FRACTAL_DPI" | xrdb -merge
fi

# Start the application that this container runs
# Running with login means that we lose all environment variables, so we need to pass them in manually
exec runuser --login fractal -c \
    'DISPLAY=:10 \
	LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/lib/i386-linux-gnu:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 \
	LOCAL=yes \
	LC_ALL=C \
	PATH=/usr/local/cuda-11.0/bin:/usr/local/nvidia/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
	DEBIAN_FRONTEND=noninteractive \
    fractal-application'
