############################# Input #############################
filebeat.inputs:
  - type: filestream
    id: whist-mandelbox-filestream
    paths:
      - /whist/temp/logs/*/*/*.log
      - /ephemeral/whist/temp/logs/*/*/*.log

    fields:
      # For JSON logs, set to `json`. For plain log lines, set to `plain`
      logzio_codec: plain

      # Your Logz.io account token. You can find your token at
      # https://app.logz.io/#/dashboard/settings/manage-accounts
      token: DUMMY_TOKEN_REPLACE_ME

      # Logz.io uses log type to parse your logs. Logs of the same types are
      # parsed the same way. For more information, see
      # https://docs.logz.io/user-guide/log-shipping/built-in-log-types.html
      #
      # For custom parsing you can:
      # - Configure Logstash in your system
      # - Use the Data Parsing wizard (https://app.logz.io/#/dashboard/data-parsing/)
      # - Get help from the Support team (email help@logz.io)
      # type: LOG-TYPE

    # For Logz.io, fields_under_root must be set to `true`. Do not change this option.
    fields_under_root: true
    encoding: utf-8
    ignore_older: 3h

    # If your plain text logs span multiple lines, uncomment the `multiline`
    # option. On the `pattern` line, give a Filebeat-supported regex pattern.
    # Filebeat combines lines when it finds the regex pattern. Supported regex
    # patterns are at https://www.elastic.co/guide/en/beats/filebeat/current/regexp-support.html
    # multiline:
    #  pattern: # Regex pattern to match
    #  negate: true
    #  match: after

# For Filebeat 7.x, use this line and remove the `registry_file` line above
filebeat.registry.path: /var/lib/filebeat

# Processors can be used to filter and enhance data that's being captured from log files.
# https://www.elastic.co/guide/en/beats/filebeat/current/filtering-and-enhancing-data.html
processors:
  - add_fields:
      # https://www.elastic.co/guide/en/beats/filebeat/current/add-fields.html
      target: "" # having an empty string as target lets us put the fields at the root.
      fields:
        environment: localdev
        component: mandelbox
  - rename:
      fields:
        - from: "agent"
          to: "filebeat_agent"
      ignore_missing: true
  # https://www.elastic.co/guide/en/beats/filebeat/current/dissect.html
  # We use the dissect processor to parse out the metadata for logs based on file-path.
  # Logs are mounted from mandelboxes onto host through bind mounts declared by the host service.
  # We have a dissect processor for ephemeral storage paths and for regular paths.
  - dissect:
      # A filepath for services that start before assigning a user on EBS storage looks like below:
      # /whist/temp/logs/6137d7df55ecba06846ab1b5670121335f31a30f045ecfe6f31acdf09a3e/display-out.log
      tokenizer: "/whist/temp/logs/%{container_id}/%{server_session_id}/%{sub_component}-%{log_level}.log"
      field: "log.file.path"
      target_prefix: ""
      # setting ignore_failure to false will stop execution of subsequent processors if dissect errors out for some reason.
      ignore_failure: true
  - dissect:
      # A filepath for services that start before assigning a user on ephemeral storage looks like below:
      # /ephemeral/whist/temp/logs/6137d7df55ecba06846ab1b5670121335f31a30f045ecfe6f31acdf09a3e/display-out.log
      tokenizer: "/ephemeral/whist/temp/logs/%{container_id}/%{server_session_id}/%{sub_component}-%{log_level}.log"
      field: "log.file.path"
      target_prefix: ""
      # setting ignore_failure to false will stop execution of subsequent processors if dissect errors out for some reason.
      ignore_failure: true
  - dissect:
      # A filepath for services that start after assigning a user on EBS storage looks like below:
      # /whist/temp/logs/6137d7df55ecba06846ab1b5670121335f31a30f045ecfe6f31acdf09a3e/1652250744/protocol-out.log
      tokenizer: "/whist/temp/logs/%{container_id}/%{server_session_id}/%{client_session_id}/%{sub_component}-%{log_level}.log"
      field: "log.file.path"
      target_prefix: ""
      # setting ignore_failure to false will stop execution of subsequent processors if dissect errors out for some reason.
      ignore_failure: true
  - dissect:
      # A filepath for services that start after assigning a user on ephemeral storage looks like below:
      # /ephemeral/whist/temp/logs/6137d7df55ecba06846ab1b5670121335f31a30f045ecfe6f31acdf09a3e/1652250744/protocol-out.log
      tokenizer: "/ephemeral/whist/temp/logs/%{container_id}/%{server_session_id}/%{client_session_id}/%{sub_component}-%{log_level}.log"
      field: "log.file.path"
      target_prefix: ""
      # setting ignore_failure to false will stop execution of subsequent processors if dissect errors out for some reason.
      ignore_failure: true
  # This allows us to add metadata about the specific cloud provider Filebeat is running on.
  # https://www.elastic.co/guide/en/beats/filebeat/current/add-cloud-metadata.html
  - add_cloud_metadata:
      # timeout: 3s
      providers:
        - aws

############################# Output #############################
output:
  logstash:
    # Use the Logz.io listener URL for your region. For help finding your
    # region's listener URL, see https://docs.logz.io/user-guide/accounts/account-region.html
    hosts: ["listener.logz.io:5015"]

    ssl:
      # For Linux, download the Logz.io public certificate to this folder.
      # Run this command:
      #  `sudo curl https://raw.githubusercontent.com/logzio/public-certificates/master/TrustExternalCARoot_and_USERTrustRSAAAACA.crt --create-dirs -o /etc/pki/tls/certs/COMODORSADomainValidationSecureServerCA.crt`
      # For Windows, replace the filepath with the certificate's location. Note that we only run Linux servers,
      # so you should have a very good reason for doing this on Windows.
      certificate_authorities:
        - "/etc/pki/tls/certs/COMODORSADomainValidationSecureServerCA.crt"
