# Note that we can't set "o" or "pipefail" or "eval '$(sentry-cli bash-hook)'" since xinitrc is run as a non-compatible shell script.
set -Eeu

xinitrc_pid=$$
echo "xinitrc PID: $xinitrc_pid"

# This script starts the AwesomeWM window manager inside the mandelbox
# and starts the mandelbox's application (i.e. Google Chrome)

RUN_AS_WHIST=/usr/share/whist/run-as-whist-user.sh

# Install keymappings
xmodmap /root/.Xmodmap

# Things running outside runuser are run as root

# Start playerctl to respond to media keys
echo "Starting 'playerctld daemon' in the background..."
$RUN_AS_WHIST "playerctld daemon" &

# Set the DPI to a default value of 96 and initialize the relevant files
/usr/share/whist/update-whist-dpi.sh

# Start the AwesomeWM window manager
echo "Starting AwesomeWM in the background..."
$RUN_AS_WHIST "awesome" &
# Gets the PID of the backgrounded AwesomeWM process
awesome_pid=$!
echo "AwesomeWM started as PID $awesome_pid..."

# Start the XSettings daemon to make DPI changes responsive
echo "Starting 'xsettingsd' in the background..."
$RUN_AS_WHIST "xsettingsd" &
echo "xsettingsd background PID: $!"

# Let everyone know that xinit is initialized
echo "$xinitrc_pid" > /usr/share/whist/xinit-pid

# Wait for AwesomeWM process
# Note: this never finishes, but leaves the X server open indefinitely
wait $awesome_pid
