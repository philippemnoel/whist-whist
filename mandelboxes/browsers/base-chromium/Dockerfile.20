# See stage 0 of the base Dockerfile for an explanation of this build stage.
ARG BuildAssetPackage "protocol"
FROM whist/build-assets:$BuildAssetPackage as build-assets

#########################################################
# Whist Chromium Extension Build Stage
#########################################################

FROM ubuntu:20.04 as whist-teleport-chrome-extension

SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

COPY teleport-extension /teleport-extension

RUN apt-get update && apt-get install --allow-downgrades --no-install-recommends -y \
    curl \
    ca-certificates \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash \
    &&  . /root/.nvm/nvm.sh \
    && echo "yarn" > /root/.nvm/default-packages \
    && nvm install 16 \
    && nvm use 16 \
    && cd /teleport-extension \
    && yarn \
    && yarn build

#########################################################
# Whist Server Extension Native Host Build Stage
#########################################################

FROM ubuntu:20.04 as whist-server-extension-native-host

SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

RUN apt-get update && apt-get install --allow-downgrades --no-install-recommends -y \
    curl \
    ca-certificates \
    build-essential \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

COPY extension-native-host /native-host

RUN cd native-host \
    && cargo build --release

#########################################################
# Socket Server Build Stage
#########################################################

FROM ubuntu:20.04 as whist-socketio-server

SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

COPY socketio-server /socketio-server

RUN apt-get update && apt-get install --allow-downgrades --no-install-recommends -y \
    curl \
    ca-certificates \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash \
    &&  . /root/.nvm/nvm.sh \
    && echo "yarn" > /root/.nvm/default-packages \
    && nvm install 16 \
    && nvm use 16 \
    && cd /socketio-server \
    && yarn \
    && yarn build \
    && yarn bundle:linux

#########################################################
# Base-Chromium Build Stage (Common to all Chromium browsers)
#########################################################

FROM whisthq/base:current-build as whist-base-chromium

# Force failure on non-zero exit code for commands with a pipe in them
SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

# Install Teleport Chrome extension
COPY --from=whist-teleport-chrome-extension /teleport-extension/build /opt/teleport/chrome-extension
COPY --from=whist-server-extension-native-host --chmod=555 /native-host/target/release/whist-server-extension-native-host /opt/teleport/chrome-extension-host

# Install Socketio server
COPY --from=whist-socketio-server /socketio-server/socketio-server /opt/teleport/socketio-server

# Install and configure our KDE proxy (for handlers used in file upload/download, etc.)
COPY --chmod=555 teleport-kde-proxy.py /opt/teleport/teleport-kde-proxy.py
RUN apt-get update && apt-get install -y --no-install-recommends kdialog \
    && rm usr/bin/kdialog \
    && ln -s /opt/teleport/teleport-kde-proxy.py /usr/bin/kdialog \
    && rm -rf /var/lib/apt/lists/*

# Copy lowercase-chromium-file descript
COPY --chmod=555 lowercase-chromium-files /usr/bin/lowercase-chromium-files

# Install Whist wrapper script to run browser into /usr/bin
COPY start-browser.sh /usr/bin/start-browser
RUN chmod +x /usr/bin/start-browser && ln -sf /usr/bin/start-browser /usr/bin/whist-application
