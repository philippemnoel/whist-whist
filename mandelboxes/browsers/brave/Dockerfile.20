# See stage 0 of the base Dockerfile for an explanation of this build stage.
ARG BuildAssetPackage "protocol"
FROM whist/build-assets:$BuildAssetPackage as build-assets

#########################################################
# Whist Chromium Extension Build Stage
#########################################################

FROM ubuntu:20.04 as whist-teleport-chrome-extension

SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

COPY teleport-extension /teleport-extension

RUN apt-get update && apt-get install -y --allow-downgrades --no-install-recommends curl ca-certificates

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash \
    &&  ./root/.nvm/nvm.sh \
    && echo "yarn" > /root/.nvm/default-packages \
    && nvm install 16 \
    && nvm use 16 \
    && cd /teleport-extension \
    && yarn \
    && yarn build

#########################################################
# Brave Build Stage
#########################################################

FROM ubuntu:20.04 as whist-teleport-chrome-extension

# Force failure on non-zero exit code for commands with a pipe in them
SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

# Install Brave Browser dependencies explicitly
RUN apt-get update && apt-get install --allow-downgrades --no-install-recommends -y \
    apt-transport-https \
    curl \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Download Brave Browser installer
RUN curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
RUN echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main" | tee /etc/apt/sources.list.d/brave-browser-release.list

# Install Brave Browser
RUN apt-get update && apt-get install --allow-downgrades --no-install-recommends -y \
    brave-browser \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set default browser
RUN su - whist -c \
    "xdg-mime default brave-browser.desktop text/html \
    && xdg-mime default brave-browser.desktop x-scheme-handler/http \
    && xdg-mime default brave-browser.desktop x-scheme-handler/https \
    && xdg-mime default brave-browser.desktop x-scheme-handler/about"

RUN mkdir -p /etc/opt/brave/policies/managed \
    && echo {} \
    # Whitelist streamed URI protocols (zoommtg,slack,spotify,discord)
    | jq '.URLWhitelist=["zoommtg://*","slack://*","spotify://*","discord://*"]' \
    # Disable search suggestions (as a workaround to improve URL bar
    # keyboard input until we can fork the browser and fix it)
    | jq '.SearchSuggestEnabled=false' \
    # Disable background apps (to prevent apps like Superhuman from
    # indefinitely blocking mandelbox shutdown).
    | jq '.BackgroundModeEnabled=false' \
    > /etc/opt/brave/policies/managed/WhistPolicies.json

# Configure teleport extension and native messaging

# Install teleport chrome extension
COPY --from=whist-teleport-chrome-extension /teleport-extension/build /opt/teleport/chrome-extension

RUN mkdir -p /etc/opt/chrome/native-messaging-hosts \
    && echo {} \
    | jq '.name="whist_teleport_extension_host"' \
    | jq '.description="Whist Teleport Chromium Extension Host"' \
    | jq '.path="/opt/teleport/chrome-extension-host"' \
    | jq '.type="stdio"' \
    # This ID is a hash of the path to the teleport chrome extension.
    # It will need to be updated if the path ever changes.
    | jq '.allowed_origins[0]="chrome-extension://gilacbinnkddlokepdofmojhijgileoj/"' \
    > /etc/opt/chrome/native-messaging-hosts/whist_teleport_extension_host.json

COPY --chmod=555 teleport-extension-host.py /opt/teleport/chrome-extension-host

# Script to Install Brave Browser extension
COPY --chmod=555 install-extension.sh /usr/bin/install-extension.sh

# Create default config paths
# Don't show first run popup
RUN mkdir -p /home/whist/.config/BraveSoftware/Brave-Browser \
    && touch /home/whist/.config/BraveSoftware/Brave-Browser/'First Run' \
    && chown whist:whist /home/whist/.config/BraveSoftware/Brave-Browser{,/'First Run'}

# Install and configure our kde proxy
COPY --chmod=555 teleport-kde-proxy.py /opt/teleport/teleport-kde-proxy.py
RUN apt-get update && apt-get install -y --no-install-recommends kdialog \
    && rm usr/bin/kdialog \
    && ln -s /opt/teleport/teleport-kde-proxy.py /usr/bin/kdialog \
    && rm -rf /var/lib/apt/lists/*

# Install Whist wrapper script to run Brave Browser into /usr/bin
ENV WHIST_DEST_BROWSER="brave"
COPY start-brave.sh /usr/bin/start-brave
RUN chmod +x /usr/bin/start-brave && ln -sf /usr/bin/start-brave /usr/bin/whist-application

# If needed, install WhistServer and helpers. Must be last step.
COPY --from=build-assets protocol/* /usr/share/whist/
