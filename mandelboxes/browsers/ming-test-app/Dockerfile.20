# See stage 0 of the base Dockerfile for an explanation of this build stage.
ARG BuildAssetPackage "protocol"
FROM whist/build-assets:$BuildAssetPackage as build-assets
FROM whisthq/base:current-build as whist-ming-test-app

# Force failure on non-zero exit code for commands with a pipe in them
SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

# Install dependencies
RUN apt-get update && apt-get install --allow-downgrades --no-install-recommends -y \
    nodejs \
    npm \
    && apt-get install -y --global yarn && \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash && \
    && source ~/.bashrc && nvm use 16 \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Import the omnibar folder and build FractalBar
COPY omnibar/ .
WORKDIR /omnibar/browser
RUN yarn -i && yarn run package:local

# Move the FractalBar executable to the correct location and reset working directory
RUN mv release/Fractal.deb /usr/bin/FractalBar && chmod +x Fractal.deb
WORKDIR /

# Install Whist wrapper script to run ming-test-app into /usr/bin
COPY start-ming-test-app.sh /usr/bin/start-ming-test-app
RUN chmod +x /usr/bin/start-ming-test-app && ln -sf /usr/bin/start-ming-test-app /usr/bin/whist-application

# Install Whist Protocol binaries and helper files (if necessary)
COPY --from=build-assets protocol/* /usr/share/whist/bin/
