# workflows/main-websever-ec2-resource-notification.yml
#
# Main Webserver: EC2 Resource Notification
# Scans currently running EC2 instances using AWS SDK and sends flagged instances as a slack message

name: "Main Webserver: EC2 Resource Notification"

on:
    pull_request:
        branches:
            - dev
    # schedule:
    #     - cron: "30 16 * * *" # runs at 11:30 am (EST/UTC+5) daily

    workflow_dispatch:

jobs:
    # Scanning EC2 Instances
    # Checks for EC2 instance status and sends instances created on dev, staging, and prod as a slack message
    main-webserver-hanging-resource-notification:
        name: Main Webserver EC2 Resource Notification
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
                  aws-region: ${{ matrix.region}}

            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Install boto3
              run: pip install boto3

            - name: Scan ec2 instances
              working-directory: .github/workflows/helpers/aws
              run: |
                  ec2_instances=$(python ecs_ec2_resource_notification.py)
                  echo 'ec2_instances<<EOF' >> $GITHUB_ENV
                  echo "$ec2_instances" >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV
                  echo "$ec2_instances"

            - name: Notify Slack all instances
              working-directory: .github/workflows/helpers/aws
              run: |
                  # notify slack if there are hanging resources
                  if [ ! -z "${{ env.ec2_instances }}" ]; then
                      curl -X POST \
                      --data-urlencode "payload={\"channel\": \"#alerts-test\", \"username\": \"Fractal Bot\", \"text\": \${{ env.ec2_instances }}\", \"icon_emoji\": \":fractal:\"}" \
                      ${{ secrets.SLACK_HOOKS_ENDPOINT }}
                  fi

            - name: Notify Slack if error
              if: ${{ failure() }}
              run: |
                  curl -X POST \
                  --data-urlencode "payload={\"channel\": \"#alerts-test\", \"username\": \"Fractal Bot\", \"text\": \"Scanning EC2 Instance failure\", \"icon_emoji\": \":fractal:\"}" \
                  ${{ secrets.SLACK_HOOKS_ENDPOINT }}
