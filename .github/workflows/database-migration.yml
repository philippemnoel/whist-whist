# workflows/main-webserver-check-pr.yml
#
# Main Webserver: Check PR
# Checks a main-webserver PR for linting and unit testing success.

name: "Database Migration"

on:
    pull_request:
        branches:
            - master
            - staging
            - dev
            - project/**
        # This workflow will run when one of these files changes.
        paths:
            - "main-webserver/**"
            - "!main-webserver/README.md"
            - ".github/workflows/main-webserver-check-pr.yml"
    # workflow_dispatch:

jobs:
    main-webserver-check-pr-linting:
        name: Run Migra Diff
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Upgrade pip
              working-directory: main-webserver
              run: pip install --upgrade pip

            - name: Install migra
              working-directory: main-webserver
              run: pip install migra

            - name: Install requests
              working-directory: main-webserver
              run: pip install requests

            - name: Authenticate Heroku
              run: |
                  cat > ~/.netrc << EOF
                  machine api.heroku.com
                    login ${{ secrets.HEROKU_DEVELOPER_LOGIN_EMAIL }}
                    password ${{ secrets.HEROKU_DEVELOPER_API_KEY }}
                  machine git.heroku.com
                    login ${{ secrets.HEROKU_DEVELOPER_LOGIN_EMAIL }}
                    password ${{ secrets.HEROKU_DEVELOPER_API_KEY }}
                  EOF

            - name: Load Database URL
              run: |
                URL=$(python3 $HEROKU_CONFIG_SCRIPT)
                echo $URL
                # echo "DB_URL=$URL" >> $GITHUB_ENV

            #   env:
            #     HEROKU_CONFIG_SCRIPT: ".github/workflows/helpers/migration/heroku_config.py"

            # - name: Print Database Schema
            #   run: |
            #     echo $(pg_dump pg_dump --no-owner --no-privileges --schema-only $DB_URL)
