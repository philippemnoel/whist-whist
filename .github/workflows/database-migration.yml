# workflows/main-webserver-check-pr.yml
#
# Main Webserver: Check PR
# Checks a main-webserver PR for linting and unit testing success.

name: "Database Migration"

on:
    pull_request:
        branches:
            - master
            - staging
            - dev
            - project/**
        # This workflow will run when one of these files changes.
        paths:
            - "main-webserver/**"
            - "!main-webserver/README.md"
            - ".github/workflows/main-webserver-check-pr.yml"
    # workflow_dispatch:

jobs:
    main-webserver-check-pr-linting:
        name: Run Migra Diff
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Upgrade pip
              working-directory: main-webserver
              run: pip install --upgrade pip

            - name: Install Migra
              working-directory: main-webserver
              run: pip install migra

            - name: Authenticate Heroku
              run: |
                  cat > ~/.netrc << EOF
                  machine api.heroku.com
                    login ${{ secrets.HEROKU_DEVELOPER_LOGIN_EMAIL }}
                    password ${{ secrets.HEROKU_DEVELOPER_API_KEY }}
                  machine git.heroku.com
                    login ${{ secrets.HEROKU_DEVELOPER_LOGIN_EMAIL }}
                    password ${{ secrets.HEROKU_DEVELOPER_API_KEY }}
                  EOF

            - name: Get HEROKU_APP_NAME env var
              run: |
                  # if [[ ${{ needs.fractal-publish-build-config.outputs.branch }} == dev ]]; then
                  #     HEROKU_APP_NAME=fractal-dev-server
                  # elif [[ ${{ needs.fractal-publish-build-config.outputs.branch }} == staging ]]; then
                  #     HEROKU_APP_NAME=fractal-staging-server
                  # elif [[ ${{ needs.fractal-publish-build-config.outputs.branch }} == master ]]; then
                  #     HEROKU_APP_NAME=fractal-prod-server
                  # else
                  #     echo 'Error: Invalid branch' && false
                  # fi
                  echo "HEROKU_APP_NAME=fractal-dev-server" >> $GITHUB_ENV

            - name: Test ENV var
              run: |
                  echo "HEROKU APP NAME:"
                  echo $HEROKU_APP_NAME


            # - name: Load Heroku Config
            #   run: |
            #     RESULT="$(
            #     curl -X GET https://api.heroku.com/apps/$HEROK \
            #     -H "Accept: application/vnd.heroku+json; version=3"
            #     )"
            #     echo "RESULT:"
            #     echol $RESULT
