# workflows/main-webserver-build-documentation.yml
#
# Main Webserver: Build Documentation
# Build and conditionally deploy web server documentation. Although this
# workflow is triggered by both pull requests and pushes, the steps that deploy
# the built documentation only run when the triggering event is a push.

name: "Main Webserver: Build Documentation"

on:
    pull_request:
        branches:
            - dev
        paths:
            - "main-webserver/docs/**"
            - main-webserver/requirements-test.txt
    push:
        branches:
            - dev
        paths:
            - "main-webserver/docs/**"
            - main-webserver/requirements-test.txt
    workflow_dispatch:

jobs:
    main-webserver-build-documentation:
        name: Build and Deploy Webserver Documentation to fractal/docs
        runs-on: ubuntu-20.04
        steps:
            - name: Check out the fractal monorepo
              uses: actions/checkout@v2
              with:
                  path: fractal

            - name: Check out the fractal/docs repository
              uses: actions/checkout@v2
              with:
                  repository: fractal/docs
                  token: ${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}
                  path: docs

            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

              # Install the version of Sphinx specified in
              # main-webserver/requirements-test.txt. As a result, we need this
              # workflow to run every time main-webserver/requirements-test.txt
              # changes.
            - name: Install Sphinx
              run: pip install $(cat fractal/main-webserver/requirements-test.txt | grep -m 1 ^Sphinx==)

            - name: Build the latest documentation
              working-directory: fractal/main-webserver/docs
              run: make html

            - name: Diff old and new documentation
              id: diff
              run: |
                  git diff --no-index fractal/main-webserver/docs/_build/html docs/webserver && echo "No changes detected"
                  echo "::set-output name=changed::$?"

              # All subsequent steps only run if both the event that triggered
              # the workflow was a push and the modifications to the
              # main-webserver/docs directory actually caused the built
              # documentation to change. An example of a change that would not
              # affect the built documentation is a formatting change in a
              # Sphinx configuration file.
            - name: Copy new documentation into the fractal/docs working tree
              if: ${{ github.event_name == 'push' && steps.diff.outputs.changed == true}}
              run: rm -r docs/webserver && cp -r fractal/main-webserver/docs/_build/html docs/webserver

            - name: Commit the documentation changes to fractal/docs
              if: ${{ github.event_name == 'push' && steps.diff.outputs.changed == true}}
              working-directory: docs
              run: |
                  # Set the author of the commit in fractal/docs to be the user
                  # who just pushed to the dev branch of the monorepo.
                  git config user.name "${{ github.event.pusher.name }}"
                  git config user.email "${{ github.event.pusher.email }}"

                  # Authenticate git as Phil with GitHub
                  git config credential.helper store
                  git credential approve <<EOF
                  protocol=https
                  host=github.com
                  username=phil@fractal.co
                  password=${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}
                  EOF

                  # Stage, commit, and push documentation changes
                  git add webserver
                  git commit -F - <<EOF
                  Update web server documentation (https://github.com/fractal/fractal/commit/${{ github.sha }})
                  EOF
                  git show --stat
                  git push
