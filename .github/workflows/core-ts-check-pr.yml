# workflows/core-ts-linting.yml
#
# Core TypeScript Library: Check PR
# Checks a Core-TS PR for linting and testing success.

name: "Core TypeScript Library: Check PR"

on:
  push:
    # Trigger CI to run when commits that modify /core-ts source files
    # are pushed to `dev`, since we need to run CI in order to generate an
    # updated test coverage report for the `dev` branch.
    branches:
      - dev
    paths:
      - "core-ts/**"
      - "!core-ts/README.md"
      - ".github/workflows/core-ts-check-pr.yml"
  pull_request:
    paths:
      - "core-ts/**"
      - "!core-ts/README.md"
      - ".github/workflows/core-ts-check-pr.yml"
  workflow_dispatch:

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v2

      - name: Install Node.js 16
        uses: actions/setup-node@v2.4.0
        with:
          node-version: "16"

      - name: Run yarn install
        working-directory: core-ts
        run: yarn install

      - name: Check if Code Follows ESLint Standards
        working-directory: core-ts
        run: yarn run lint:check

  test:
    name: Testing
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v2

      - name: Build Monorepo Configuration
        id: config
        uses: ./.github/actions/monorepo-config
        with:
          secrets: ${{ toJSON(secrets) }}
          os: linux
          deploy: dev

      - name: Install Node.js 16
        uses: actions/setup-node@v2.4.0
        with:
          node-version: "16"

      - name: Run yarn install
        working-directory: core-ts
        run: yarn install

      - name: Run core-ts test suite
        working-directory: core-ts
        env:
          CONFIG: ${{ steps.config.outputs.config }}
        run: yarn run test:ci

      - name: Upload Codecov Report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: core-ts/coverage/clover.xml
          flags: core-ts
          fail_ci_if_error: true # optional (default = false)
