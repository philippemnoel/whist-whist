# workflows/fractal-deploy-sentry-releases.yml
#
# Fractal: Deploy Sentry Releases
# Automatically push a new Sentry release for each of the fractal/fractal projects.

name: "Fractal: Deploy Sentry Releases"

on:
    push:
        branches:
            - master
            - staging
            - dev
        paths-ignore:
            - "README.md"
            - "**/README.md"
            - ".github/workflows/README.md"
    workflow_dispatch:

jobs:
    fractal-deploy-sentry-releases-main:
        name: "Deploy Sentry Release for: ${{ matrix.project.name }}"
        runs-on: ubuntu-20.04
        outputs:
            branch: ${{ steps.detect-sentry-environment.outputs.sentry-environment }}

        strategy:
            matrix:
                project:
                    - name: Main Webserver
                      sentry-project: main-webserver
                    - name: Protocol (macOS, Windows, Linux Ubuntu)
                      sentry-project: desktop-protocol
                    - name: ECS Host Service
                      sentry-project: ecs-host-service
                    - name: Client Applications (macOS, Windows, Linux Ubuntu)
                      sentry-project: desktop-client
        env:
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG: tryfractal
            SENTRY_PROJECT: ${{ matrix.project.sentry-project }}

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Set Git Repository URL to Enable sentry-cli Automatic Commit Tagging
              run: git remote set-url origin https://github.com/fractal/fractal

            - name: Set SENTRY_DEPLOY_ENVIRONMENT Based on Git Branch
              id: detect-sentry-environment
              run: |
                  if [ "${GITHUB_REF##*/}" == "master" ]; then
                      echo "SENTRY_DEPLOY_ENVIRONMENT=production" >> $GITHUB_ENV
                  elif [ "${GITHUB_REF##*/}" == "staging" ]; then
                      echo "SENTRY_DEPLOY_ENVIRONMENT=staging" >> $GITHUB_ENV
                  else
                      echo "SENTRY_DEPLOY_ENVIRONMENT=dev" >> $GITHUB_ENV
                  fi

                  echo "Sentry environment is set to: $SENTRY_DEPLOY_ENVIRONMENT"
                  echo "::set-output name=sentry-environment::$SENTRY_DEPLOY_ENVIRONMENT"

            - name: Create New Sentry Release
              run: |
                  # Install Sentry CLI
                  curl -sL https://sentry.io/get-cli/ | bash

                  # Create new Sentry release
                  export SENTRY_RELEASE=$(sentry-cli releases propose-version)
                  sentry-cli releases new $SENTRY_RELEASE --project $SENTRY_PROJECT
                  sentry-cli releases set-commits --auto $SENTRY_RELEASE --log-level=debug
                  sentry-cli releases finalize $SENTRY_RELEASE

                  # Create new deploy for this Sentry release
                  sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_DEPLOY_ENVIRONMENT

    notify-slack:
        name: Notify Slack
        runs-on: ubuntu-20.04
        needs: [fractal-deploy-sentry-releases-main]
        if: success()
        steps:
            - name: Notify Slack
              run: |
                  curl -X POST \
                  --data-urlencode "payload={\"channel\": \"#alerts\", \"username\": \"Sentry\", \"text\": \"Fractal Sentry Releases for Environment \`${{ fromJSON(needs.fractal-deploy-sentry-releases-main.detect-sentry-environment.outputs.sentry-environment) }}\` Deployed to Sentry.\", \"icon_emoji\": \":sentry:\"}" \
                  ${{ secrets.SLACK_HOOKS_ENDPOINT }}
