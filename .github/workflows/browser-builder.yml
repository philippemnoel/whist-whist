# workflows/browser-builder.yml
#
# Browser Builder: Build Brave Browser
# Spins up an AWS macOS EC2 instance to compile Brave Browser

name: "Browser Builder: Build Brave Browser"

# Only run on workflow_dispatch and if a client-side piece of Fractal is modified
on:
  push:
    branches:
      - dev
    paths:
      - "client-applications/**"
      - "core-ts/**"
      - "microservices/**"
      - "protocol/**"
  pull_request:
    branches:
      - dev # TODO: For testing, need to remove
  workflow_dispatch:

jobs:
  build-and-publish-brave-browser:
    name: Compile Brave Browser on ${{ matrix.runners.name }}
    runs-on: ${{ matrix.runners.os }}
    defaults:
      run:
        shell: ${{ matrix.runners.shell }}

    strategy:
      matrix:
        runners:
          # - name: macOS (X86_64)
          #   os: [self-hosted, macOS, X64] # MacStadium Intel i7 3.2GHz 6-cores 32GB RAM
          #   arch: macos-x64
          #   shell: bash --noprofile --norc -eo pipefail {0}
          - name: macOS (ARM64)
            os: [self-hosted, macOS, ARM64] # MacStadium Apple Silicon M1 8GB RAM
            arch: macos-arm64
            shell: /usr/bin/arch -arch arm64e /bin/bash {0}
          - name: macOS (GHA) # TODO: For testing in GHA, need to remove
            os: macos-10.15
            arch: macos-x64
            shell: bash --noprofile --norc -eo pipefail {0}
          - name: Linux Ubuntu (GHA)
            os: ubuntu-20.04
            arch: linux-x64
            shell: bash --noprofile --norc -eo pipefail {0}

    steps:
      ##################################### CONFIG STEPS START ###################################

      - name: Checkout fractal/brave-browser Repository
        uses: actions/checkout@v2
        with:
          repository: fractal/brave-browser
          path: brave-browser
          token: ${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}

      # The brave-browser scripts clone fractal/brave-core, so we need to configure git credentials
      # to be able to access that repository globally from the workflow runner
      - name: Configure Global git Credentials
        run: git config --global credential.helper '!f() { printf "%s\n" "username=philippemnoel" "password=${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}" "--timeout=600"; };f'

      # To read/write build cache to AWS S3 using sccache
      - name: Configure AWS S3 CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Speed up npm on macOS: https://github.com/brave/brave-browser/wiki/macOS-Development-Environment
      - name: Turn macOS Spotlight Off to Speed Up Build
        if: runner.os == 'macOS'
        working-directory: brave-browser
        run: touch .metadata_never_index && killall Finder

      # Configure sccache following: https://github.com/brave/brave-browser/wiki/sccache-for-faster-builds
      - name: Configure sccache
        run: |
          # Install sccache
          cargo install sccache

          # Export and link sccache
          # For the self-hosted macOS M1 Runner, this is run manually with sudo via VNC due to permission issues
          export PATH="$PATH:$HOME/.cargo/bin"
          ln -s ~/.cargo/bin/sccache /usr/local/bin/sccache

          # Verify that the shell finds the program
          which sccache

          # Export Fractal Brave Browser build S3 bucket to .bashrc for sccache
          export SCCACHE_BUCKET=fractal-brave-browser-${{ matrix.runners.arch }}

          # Configure fractal/brave-browser to use sccache
          echo "sccache = $(which sccache)" > .npmrc

      - name: Start sccache Daemon
        run: sccache --start-server

      ############################################################################################
      #################################### BUILDING STEPS START ##################################

      # Before this, you need Node 16 to avoid
      # https://stackoverflow.com/questions/65856300/wasm-code-commit-allocation-failed-process-out-of-memory
      # despite Brave saying you need Node 12

      # You also need to have downloaded Xcode, accepted the terms/license, and
      # installed Xcode CLI via `xcode-select --install` and then run
      # sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Configure depot_tools and vpython for ARM64
        if: ${{ matrix.runners.arch }} == 'macos-arm64'
        run: |
          echo "mac-arm64" > .cipd_client_platform
          echo "mac-arm64" > src/third_party/depot_tools/.cipd_client_platform
          export VPYTHON_BYPASS="manually managed python not supported by chrome operations"

      - name: Run npm install
        working-directory: brave-browser
        run: npm install

      # This takes 30-45 minutes to run
      # The Chromium source is downloaded, which has a large history
      - name: Run npm init
        working-directory: brave-browser
        run: npm run init

      # Build options are:
      # npm run build           --> standard build with Chromium components mode enabled
      # npm run build Release   --> standard build for production use, without debug symbols
      # npm run build Static    --> statically linked build (takes longer to build, but starts faster)
      # npm run build Debug     --> standard build with debug mode enabled
      - name: Build Brave Browser in Debug Mode
        working-directory: brave-browser
        run: npm run build

      - name: Stop sccache Daemon
        run: sccache --stop-server

      ############################################################################################
      ################################### PUBLISHING STEPS START #################################

      ############################################################################################
      ################################# NOTIFICATIONS STEPS START ################################

      - name: Checkout Fractal Git Repository
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && failure() }}
        uses: actions/checkout@v2

      - name: Setup Python-based Notifications
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && failure() }}
        working-directory: .github/workflows/helpers
        run: ./notifications/setup_notifications.sh

      - name: Notify Slack on Workflow Failure (Only on Push/Workflow_dispatch Events)
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && failure() }}
        shell: python3 {0}
        run: |
          from notifications.slack_bot import slack_post
          SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT }}"
          SLACK_CHANNEL = "#alerts-prod"
          BODY = f"@releases :rotating_light: Failed to build and deploy Brave Browser for ${{ matrix.runners.os }} to AWS S3, investigate immediately :rotating_light: (<https://github.com/fractal/fractal/actions/runs/${{ github.run_id }} | see logs>)"
          slack_post(slack_webhook=SLACK_WEBHOOK, channel=SLACK_CHANNEL, body=BODY)

  ################################################################################################
  ################################################################################################

  notify-slack:
    name: Notify Slack on Workflow Success
    needs: [build-and-publish-brave-browser]
    if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && success() }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v2

      - name: Setup Python-based Notifications
        working-directory: .github/workflows/helpers
        run: ./notifications/setup_notifications.sh

      - name: Notify Slack on Workflow Success (Only on Push/Workflow_dispatch Events)
        shell: python3 {0}
        run: |
          from notifications.slack_bot import slack_post
          SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT }}"
          SLACK_CHANNEL = "#alerts-prod"
          TITLE = ":brave: Fractal Brave Browser Built and Deployed :brave:"
          BODY = f"Fractal Brave Browser for macOS build and deployed to Production via upload to AWS S3 (<https://github.com/fractal/fractal/actions/runs/${{ github.run_id }} | see logs>)"
          slack_post(slack_webhook=SLACK_WEBHOOK, channel=SLACK_CHANNEL, body=BODY, title=TITLE)
