# workflows/main-webserver-load-testing.yml
#
# Main Webserver: Load Testing
# Runs a load test with `num_users` users on our staging webserver to test the load stability of
# staging every Sunday at 2am Eastern.

name: "Main Webserver: Load Testing"
on:
    schedule:
        - cron: "0 7 * * 0" # runs at 2:00am (EST/UTC+5) on Sunday
    workflow_dispatch:

jobs:
    main-webserver-load-testing:
        name: Main Webserver Load Testing
        runs-on: ubuntu-20.04

        env:
            webserver_url: "https://dev-server.fractal.co"
            heroku_app_name: "fractal-dev-server"
            num_users: "10"
            load_test_region: "us-east-1"

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2
              # with:
              #     ref: "staging" # use staging version of load testing scripts

            # - name: Configure AWS CLI
            #   uses: aws-actions/configure-aws-credentials@v1
            #   with:
            #       aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
            #       aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
            #       aws-region: us-east-1

            # - name: Authenticate Heroku
            #   run: |
            #       cat > ~/.netrc << EOF
            #       machine api.heroku.com
            #         login ${{ secrets.HEROKU_DEVELOPER_LOGIN_EMAIL }}
            #         password ${{ secrets.HEROKU_DEVELOPER_API_KEY }}
            #       machine git.heroku.com
            #         login ${{ secrets.HEROKU_DEVELOPER_LOGIN_EMAIL }}
            #         password ${{ secrets.HEROKU_DEVELOPER_API_KEY }}
            #       EOF

            # - name: Set up Python 3.8
            #   uses: actions/setup-python@v2
            #   with:
            #       python-version: 3.8

            # - name: Install notification dependencies
            #   working-directory: .github/workflows/helpers
            #   run: pip install -r notifications/requirements.txt

            - name: Setup Python-based notifications
              working-directory: .github/workflows/helpers
              run: |
                pip install -r notifications/requirements.txt
                # allows us to import from notifications package anywhere in this job
                echo "PYTHONPATH=$PYTHONPATH:$(pwd)/notifications" >> $GITHUB_ENV

            - name: Slack test
              shell: python3 {0}
              run: |
                  from notifications import slack_post

                  SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT }}"
                  SLACK_CHANNEL = "#alerts-test"
                  BODY = "Hello from GHA"

                  slack_post(slack_webhook=SLACK_WEBHOOK, channel=SLACK_CHANNEL, body=BODY)

            # - name: Install webserver scripting dependencies
            #   working-directory: main-webserver
            #   # install webserver scripting dependencies
            #   run: pip install -r scripts/requirements.txt

            # - name: Setup and run load test
            #   working-directory: main-webserver
            #   shell: python3 {0} # any uncaught Python error will exit the shell and fail this step
            #   run: |
            #       # this allows us to import from `scripts`
            #       import sys
            #       sys.path.append(".")
            #       import subprocess
            #       import time

            #       from scripts.misc_scripts import login  
            #       from scripts.load_testing.load_test_management import prod_webserver_context
            #       from scripts.load_testing.load_test_driver import run_local_load_test

            #       WEBSERVER_URL = "${{ env.webserver_url }}"
            #       HEROKU_APP_NAME = "${{ env.heroku_app_name }}"
            #       NUM_USERS = int("${{ env.num_users }}")
            #       LOAD_TEST_REGION = "${{ env.load_test_region }}"
            #       USERNAME = "${{ secrets.HEROKU_ALL_WEBSERVERS_ADMIN_USERNAME }}"
            #       PASSWORD = "${{ secrets.HEROKU_ALL_WEBSERVERS_ADMIN_PASSWORD }}"

            #       # use heroku to get the database url for the current app
            #       ret = subprocess.run(f"heroku config:get DATABASE_URL --app {HEROKU_APP_NAME}", capture_output=True, shell=True)
            #       assert ret.returncode == 0, f"Heroku DATABASE_URL retrieval failed. Stdout: {ret.stdout}, Stderr: {ret.stderr}"
            #       DB_URI = ret.stdout.decode("utf-8").strip()

            #       # Log in as Admin to get Bearer Token
            #       TOKEN = login(WEBSERVER_URL, USERNAME, PASSWORD)["access_token"]

            #       # --- Setup load test --- #
            #       # Temporarily upgrade the heroku app for prod-like use. Will be downgraded after the with- block finishes.
            #       with prod_webserver_context(HEROKU_APP_NAME):
            #         # trigger the load test; this errors out if any user does not get a container
            #         run_local_load_test(WEBSERVER_URL, TOKEN, NUM_USERS, LOAD_TEST_REGION)

            # - name: Notify Slack on success
            #   working-directory: .github/workflows/helpers
            #   shell: python3 {0}
            #   run: |
            #       from notifications import slack_post

            #       SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT }}"
            #       SLACK_CHANNEL = "#alerts-${{ needs.fractal-publish-build-config.outputs.deploy_environment }}"
            #       WEBSERVER_URL= "${{ env.webserver_url }}"
            #       BODY = f"Successfully load tested webserver at {WEBSERVER_URL} (<https://github.com/fractal/fractal/actions/runs/${{ github.run_id }} | see logs>)"

            #       slack_post(slack_webhook=SLACK_WEBHOOK, channel=SLACK_CHANNEL, body=BODY)

            # - name: Notify Slack on failure
            #   if: failure()
            #   working-directory: .github/workflows/helpers
            #   shell: python3 {0}
            #   run: |
            #       from notifications import slack_post

            #       SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT }}"
            #       SLACK_CHANNEL = "#alerts-${{ needs.fractal-publish-build-config.outputs.deploy_environment }}"
            #       WEBSERVER_URL= "${{ env.webserver_url }}"
            #       BODY = f"Failed load testing webserver at {WEBSERVER_URL} (<https://github.com/fractal/fractal/actions/runs/${{ github.run_id }} | see logs>)"

            #       slack_post(slack_webhook=SLACK_WEBHOOK, channel=SLACK_CHANNEL, body=BODY)
