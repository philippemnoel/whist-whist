# workflows/container-images-check-pr.yml
#
# Container Images: Check PR
# Check a container-images/protocol PR for Dockerfile linting and Docker images building success.

name: "Container Images: Check PR"

on:
    pull_request:
        branches:
            - master
            - staging
            - dev
            - project/**
        paths:
            - "container-images/**"
            - ".github/workflows/container-images-build-images.yml"
            - "!container-images/README.md"
            - "!container-images/run_container_image.sh"
            - "!container-images/run_local_container_image.sh"
            - "!container-images/run_remote_container_image.sh"
            - "protocol/**"
            - "!protocol/README.md"
    workflow_dispatch:

jobs:
    # Linting
    # Checks for formatting and Dockerfile standards using Hadolint.
    container-images-lint-dockerfiles:
        name: Linting
        runs-on: ubuntu-20.04
        container: hadolint/hadolint

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            # Start from top-level folder to use .hadolint.yaml config
            - name: Check if Development Dockerfiles Follow Hadolint Standards
              run: hadolint ./**/*Dockerfile

            # Start from top-level folder to use .hadolint.yaml config
            - name: Check if Container Images Dockerfiles Follow Hadolint Standards
              run: |
                  hadolint ./container-images/*/Dockerfile.20
                  hadolint ./container-images/*/*/Dockerfile.20

    # Docker images building
    # Checks that the Docker images build successfully.
    container-images-build-images:
        name: Building
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Configure AWS CLI # To get and install GRID driver
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Walk Folder to Find All Dockerfiles and Store Paths as Environment Variable
              run: echo "apps=$(./container-images/find_images_in_git_repo.sh)" >> $GITHUB_ENV



            - name: Test to see paths resolving with GHA
              run: |
                echo ${{ github.event.pull_request }}
                echo ${{ github.event.pull_request.paths }}
                echo "${{ github.event.pull_request.paths }} == protocol/**"


            - name: Build Container Images
              if: false
              run: |
                  for app in ${{ env.apps }}
                  do
                    ./container-images/build_container_image.sh $app
                  done
