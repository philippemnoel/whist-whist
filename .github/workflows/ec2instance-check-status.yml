# workflows/ec2-status.yml
#
# EC2 Instance Status: Checks EC2 Instance
# Scans currently running EC2 instances using AWS SDK and sends flagged instances as a slack message

name: "EC2 Instance Status: Checks EC2 instance "

on:
    pull_request:
        branches:
            - dev

    # push:
    # triggers workflow on a schedule
    # schedule:
    #     - cron: "*/5 * * * *"

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    ec2instance-check-status-main:
        runs-on: ubuntu-20.04

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2
              with:
                  ref: "steveli/ec2-status-workflow"

            - name: Configure AWS Credentials
              # You may pin to the exact commit or the version.
              # uses: aws-actions/configure-aws-credentials@d2221ce3c7101a35ff049cc8fe652f5c9a64372d
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Upgrade pip
              working-directory: .github/workflows/helpers/ec2monitoring
              run: pip install --upgrade pip

            - name: Install Dependencies
              working-directory: .github/workflows/helpers/ec2monitoring
              run: pip install -r requirements.txt

            - name: Run ec2 instances
              working-directory: .github/workflows/helpers/ec2monitoring
              run: python3 main.py
              env:
                  SLACK_EC2_BOT_TOKEN: ${{ secrets.SLACK_EC2_ALERTS_OAUTH_TOKEN }}
