# workflows/webserver-clean-up-instances.yml
#
# Webserver: Clean up Compute Instances
# Peridically scale down surplus compute instances and terminate instances that
# are left over from previous deployments.

name: "Webserver: Clean up Compute Instances"

on:
  schedule:
    # Schedule this Workflow to run every ten minutes. The highest frequency
    # with which we can run our scale-down and and clean-up operatinons is once
    # every five minutes.
    # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule
    - cron: "4/10 * * * *"
  workflow_dispatch:

env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_DEVELOPER_API_KEY }}
  HEROKU_NOTIFICATIONS: 0

jobs:
  webserver-clean-up-instances:
    name: Clean up Compute Instances
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        app: [whist-dev-server, whist-staging-server, whist-prod-server]
        region: [us-east-1, us-west-1]
        include:
          - app: whist-prod-server
            region: us-east-2
          - app: whist-prod-server
            region: us-west-2
          - app: whist-prod-server
            region: ca-central-1
    steps:
      - name: Checkout git Repository
        uses: actions/checkout@v2

      - name: Set up Python-based Notifications
        working-directory: .github/workflows/helpers
        run: ./notifications/setup_notifications.sh

      - name: Clean up Compute Instances
        run: heroku run --exit-code --app="${{ matrix.app }}" -- flask region cleanup aws "${{ matrix.region }}"

      - name: Scale Down Compute Capacity
        run: heroku run --exit-code --app="${{ matrix.app }}" -- flask region scale-down aws "${{ matrix.region }}"

      - name: Notify Slack on Failure
        if: failure()
        shell: python3 {0}
        run: |
          from notifications.slack_bot import slack_post

          # Retrieve Slack webhook and channel
          if "prod" in "${{ matrix.app }}":
            SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT_PROD }}"
            SLACK_CHANNEL = "#alerts-prod"
          elif "staging" in "${{ matrix.app }}":
            SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT_STAGING }}"
            SLACK_CHANNEL = "#alerts-staging"
          else:
            SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT_DEV }}"
            SLACK_CHANNEL = "#alerts-dev"

          BODY = f"@releases :rotating_light: Failed to scale down user EC2 instances, investigate immediately :rotating_light: (<https://github.com/whisthq/whist/actions/runs/${{ github.run_id }} | see logs>)"
          slack_post(slack_webhook=SLACK_WEBHOOK, channel=SLACK_CHANNEL, body=BODY)
