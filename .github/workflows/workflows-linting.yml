# workflows/workflows-linting.yml
#
# Workflows: Linting
# Lint YAML workflows using Prettier.

name: "Workflows: Linting"

on:
    pull_request:
        branches:
            - prod
            - staging
            - dev
        paths:
            - ".github/workflows/**"
            - "!.github/workflows/README.md"
            - ".github/workflows/workflows-linting.yml"
    workflow_dispatch:

jobs:
    workflows-linting-main:
        name: Lint GitHub Actions Workflows
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Install Node.js 14
              uses: actions/setup-node@v2.1.5
              with:
                  node-version: 14

            - name: Install Prettier
              run: npm install -g prettier

            - name: Check if Code is Formatted
              working-directory: .github/workflows
              run: prettier --check '*.yml'

    workflows-helpers-linting:
        name: Lint Github Actions Helpers
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Upgrade pip
              working-directory: main-webserver
              run: pip install --upgrade pip

            - name: Install requirements
              working-directory: .github/workflows/helpers
              run: pip install -r requirements.txt

            - name: Check if Code is Linted with Python Black
              working-directory: .github/workflows/helpers
              run: |
                  result=$(black . --check) # Returns 0 if the code is already linted
                  if [ "$result" -ne "0" ]; then
                    (echo "To pass this check please lint the code with Python Black" && false)
                  else
                    (echo "Code is linted with Python Black" && true)
                  fi

            - name: Check if Code Matches Pylint Standards
              working-directory: .github/workflows/helpers
              run: |
                  # For consistency, just use the same pylintrc for all of our
                  # python code. This is obviously a hack, and not something we
                  # want to do in this way in the long term.
                  # TODO here: https://github.com/fractal/fractal/issues/2111
                  ln -sf ../../../main-webserver/pylintrc ./pylintrc
                  pylint aws # Returns -1 iff code is linted
                  pylint notifications
                  pylint resources
