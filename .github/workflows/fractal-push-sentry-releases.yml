# workflows/fractal-push-sentry-releases.yml
#
# Fractal: Push Sentry Release
# Automatically push a new sentry release for each of the fractal/fractal projects.

name: "Fractal: Push Sentry Releases"

on:
    push:
        branches:
            - master
            - staging
            - dev
            - project/**
        paths-ignore:
            - "README.md"
            - "**/README.md"
            - ".github/workflows/README.md"
    workflow_dispatch:

jobs:
    fractal-push-sentry-releases-main:
        strategy:
            matrix:
                project:
                    - name: Main Webserver
                      sentry-project: main-webserver
                    - name: Protocol
                      sentry-project: protocol
                    - name: ECS Host Service
                      sentry-project: ecs-host-service
        name: "${{ matrix.name }}: Push Sentry Release"
        runs-on: ubuntu-20.04
        env:
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG: tryfractal
            SENTRY_PROJECT: ${{ matrix.sentry-project }}
            SENTRY_DEPLOY_ENVIRONMENT: production

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2
              with:
                  persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
                  fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

            - name: Set Git repository URL to enable sentry-cli automatic commit tagging
              run: |
                  git remote set-url origin https://github.com/fractal/fractal

            - name: Create new Sentry release
              run: |
                  # Install Sentry CLI
                  curl -sL https://sentry.io/get-cli/ | bash

                  # Create new Sentry release
                  export SENTRY_RELEASE=$(sentry-cli releases propose-version)
                  sentry-cli releases new $SENTRY_RELEASE --project $SENTRY_PROJECT
                  sentry-cli releases set-commits --auto $SENTRY_RELEASE --log-level=debug
                  sentry-cli releases finalize $SENTRY_RELEASE

                  # Create new deploy for this Sentry release
                  sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_DEPLOY_ENVIRONMENT

            - name: Notify Slack
              run: |
                  curl -X POST \
                  --data-urlencode "payload={\"channel\": \"#alerts\", \"username\": \"Sentry\", \"text\": \"Main Webserver Sentry Release pushed to Sentry.\", \"icon_emoji\": \":sentry:\"}" \
                  ${{ secrets.SLACK_HOOKS_ENDPOINT }}
