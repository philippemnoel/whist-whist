# workflows/host-service-build-and-publish-docs.yml
#
# Host Service: Build & Publish Documentation
# Build and conditionally deploy host service documentation. Although this
# workflow is triggered by both pull requests and pushes, the steps that deploy
# the built documentation only run when the triggering event is a push.

name: "Host Service: Build & Publish Documentation"

on:
  pull_request:
    branches:
      - dev
    paths:
      - ".github/workflows/host-service-build-and-publish-docs.yml"
      - "host-service/**"
  push:
    branches:
      - dev
    paths:
      - ".github/workflows/host-service-build-and-publish-docs.yml"
      - "host-service/**"
  workflow_dispatch:

jobs:
  host-service-build-documentation:
    name: Build & Publish Host Service Documentation to fractal/docs
    runs-on: ubuntu-20.04
    concurrency: host-service-build-and-publish-documentation-${{ github.ref }}

    steps:
      ################################# CONFIG STEPS START ###############################

      - name: Checkout the fractal Git Repository
        uses: actions/checkout@v2
        with:
          path: fractal

      - name: Checkout the fractal/docs Git Repository
        uses: actions/checkout@v2
        with:
          repository: fractal/docs
          token: ${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}
          path: docs

      - name: Setup Python-based notifications
        working-directory: fractal/.github/workflows/helpers
        run: ./notifications/setup_notifications.sh

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16"

      - name: Build Host Service Documentation
        working-directory: fractal/host-service
        run: make docs

      - name: Diff Old and New Documentation
        id: diff
        run: |
          git diff --no-index fractal/host-service/build/docs docs/host-service && echo "No changes detected"
          echo "::set-output name=changed::$?"

      ###################################################################################
      ################################# PUBLISH STEPS START #############################

      - name: Reset fractal/docs ahead of publishing (in case it changed between concurrent workflow runs)
        run: git reset --hard origin/main

      - name: Copy New Documentation into the fractal/docs Working Tree (Only on Push/Workflow_dispatch Events)
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && steps.diff.outputs.changed == true}}
        run: rm -rf docs/host-service && cp -r fractal/host-service/build/docs docs/host-service

      - name: Commit the Documentation Changes to fractal/docs (Only on Push/Workflow_dispatch Events)
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && steps.diff.outputs.changed == true}}
        working-directory: docs
        run: |
          # Set the author of the commit in fractal/docs to be the user
          # who just pushed to the dev branch of the monorepo.
          git config user.name "${{ github.event.pusher.name }}"
          git config user.email "${{ github.event.pusher.email }}"

          # Authenticate Git as Phil with GitHub
          git config credential.helper store
          git credential approve <<EOF
          protocol=https
          host=github.com
          username=phil@fractal.co
          password=${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}
          EOF

          # Stage, commit, and push documentation changes
          git add host-service
          git commit -F - <<EOF
          Update host-service documentation (https://github.com/fractal/fractal/commit/${{ github.sha }})
          EOF
          git show --stat
          git push

      ###################################################################################

      - name: Notify Slack on Workflow Error (Only on Push/Workflow_dispatch Events)
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && steps.diff.outputs.changed == true && failure() }}
        shell: python3 {0}
        run: |
          from notifications.slack_bot import slack_post

          SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT }}"
          SLACK_CHANNEL = "#alerts-dev"
          BODY = "@releases :rotating_light: Failed to deploy `host-service` Internal Documentation to `docs.fractal.co`, investigate immediately :rotating_light: (<https://github.com/fractal/fractal/actions/runs/${{ github.run_id }} | see logs>)"

          slack_post(slack_webhook=SLACK_WEBHOOK, channel=SLACK_CHANNEL, body=BODY)

      - name: Notify Slack (Only on Push/Workflow_dispatch Events)
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && steps.diff.outputs.changed == true && success() }}
        shell: python3 {0}
        run: |
          from notifications.slack_bot import slack_post

          SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT }}"
          SLACK_CHANNEL = "#alerts-dev"
          TITLE = ":orange_book: Host Service Internal Documentation Deployed :orange_book:"
          BODY = "Fractal `host-service` Internal Documentation Deployed to `docs.fractal.co` (<https://github.com/fractal/fractal/actions/runs/${{ github.run_id }} | see logs>)"

          slack_post(slack_webhook=SLACK_WEBHOOK, channel=SLACK_CHANNEL, body=BODY, title=TITLE)
