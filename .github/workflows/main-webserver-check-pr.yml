# workflows/main-webserver-check-pr.yml
#
# Main Webserver: Check PR
# Checks a main-webserver PR for linting and unit testing success.

name: "Main Webserver: Check PR"

on:
    pull_request:
        branches:
            - prod
            - staging
            - dev
        paths:
            - "main-webserver/**"
            - "!main-webserver/README.md"
            - ".github/workflows/main-webserver-check-pr.yml"
    workflow_dispatch:

jobs:
    # Linting
    # Checks for formatting using Black and Pylint.
    main-webserver-check-pr-linting:
        name: Linting
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Upgrade pip
              working-directory: main-webserver
              run: pip install --upgrade pip

            - name: Install Dependencies
              working-directory: main-webserver
              run: pip install -r requirements.txt -r requirements-test.txt

            - name: Check if Code is Linted with Python Black
              working-directory: main-webserver
              run: |
                  result=$(black . --check) # Returns 0 if the code is already linted
                  if [ "$result" -ne "0" ]; then
                    (echo "To pass this check please lint the code with Python Black" && false)
                  else
                    (echo "Code is linted with Python Black" && true)
                  fi

            - name: Check if Code Matches Pylint Standards
              working-directory: main-webserver
              run: pylint app # Returns 0 iff code is linted

    # Heroku Testing
    # Checks unit tests on the Heroku pipeline.
    main-webserver-check-pr-testing-heroku:
        name: Heroku Testing
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.ref }} # must checkout the branch, not just the commit, for Heroku CI to work

            - name: Run Tests on Heroku
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_DEVELOPER_API_KEY }}
              working-directory: main-webserver
              run: |
                bash docker/retrieve_config.sh
                bash docker/local_deploy.sh
                bash docker/local_deploy.sh --down
                heroku ci:run --pipeline ${{ secrets.HEROKU_PIPELINE_NAME }}
