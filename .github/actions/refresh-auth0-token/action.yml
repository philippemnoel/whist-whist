# actions/refresh-auth0-token/action.yml
#
# Use Refresh Token to Obtain Access Token
# Call an Auth0 tenant's /oauth/token endpoint, supplying a valid refresh token,
# in order to obtain a valid access token.

name: Use a Refresh Token to Obtain Access Token
description: Use a refresh token to obtain a new access token from an Auth0 tenant.
inputs:
    domain:
        description: The Auth0 tenant's domain name
        required: true
    client-id:
        description: The client ID of the GHA client registered to the tenant
        required: true
    client-secret:
        description: The client secret of the GHA client registered to the tenant
        required: true
    refresh-token:
        description: |
            The refresh token belonging to a Fractal administrator and issued
            to the GHA client registered to the Auth0 tenant
        required: true
outputs:
    access-token:
        description: The access token obtained using the refresh token
        value: ${{ steps.get-token.outputs.token }}
runs:
    using: composite
    steps:
        - name: Install the Python requests package
          shell: bash
          run: python3 -m pip install requests

        - name: Obtain an access token
          id: get-token
          shell: python3 {0}
          run: |
              import requests

              # The API request is documented here: https://auth0.com/docs/flows/call-your-api-using-the-client-credentials-flow
              response = requests.post(
              "https://${{ inputs.domain }}/oauth/token",
                  json={
                      "grant_type": "client_credentials",
                      "client_id": "${{ inputs.client-id }}",
                      "client_secret": "${{ inputs.client-secret }}",
                      "audience": "https://${{ inputs.domain }}/api/v2/"
                  }
              )

              response.raise_for_status()

              access_token = response.json()["access_token"]

              print(f"::set-output name=token::{access_token}")
