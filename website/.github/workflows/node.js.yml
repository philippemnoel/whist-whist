# workflows/node.js.yml
#
# Website: Node.js Build and Test
# Build website and run Node.js tests.

name: "Website: Node.js Build and Test"

on:
    pull_request:
        branches:
            - master
            - staging
            - dev

jobs:
    website-building-main:
        name: Build and Test Website
        runs-on: ubuntu-20.04

        env:
            CI: true
            NPM_TOKEN: ${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}

        steps:
            - name: Check out Git Repository
              uses: actions/checkout@v2
              with:
                  persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
                  fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

            - name: Configure AWS S3 CLI
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Install Node.js 14
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - name: Run npm install
              run: |
                  npm config set '//npm.pkg.github.com/:_authToken' "${NPM_TOKEN}"
                  npm install

            - name: Increases watchers
              run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

            - name: Run retrieve.py to retrieve .env file
              run: pip install boto3 && cd scripts && python retrieve.py

            - name: Run npm ci
              run: npm ci

            - name: Run npm build
              run: npm run build --if-present

            - name: Set GraphQL Access Key (prod, staging, dev) Based on Git Branch (master, staging, dev)
              run: |
                  if [ "${GITHUB_REF##*/}" == "master" ]; then
                    echo "hasura_graphql_access_key=${{ secrets.HASURA_GRAPHQL_ACCESS_KEY_PROD }}" >> $GITHUB_ENV
                  elif [ "${GITHUB_REF##*/}" == "staging" ]; then
                    echo "hasura_graphql_access_key=${{ secrets.HASURA_GRAPHQL_ACCESS_KEY_STAGING }}" >> $GITHUB_ENV
                  else
                    echo "hasura_graphql_access_key=${{ secrets.HASURA_GRAPHQL_ACCESS_KEY_DEV }}" >> $GITHUB_ENV
                  fi

            - name: Run npm test
              run: npm run ci-test
              env:
                HASURA_ADMIN_KEY: ${{ env.hasura_graphql_access_key }}
